services:
  api:
    container_name: saas-api
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    networks:
      saas-network:
        aliases:
          - api.saas.local
    ports:
      - '${API_PORT_EXTERNAL:-3000}:3000'
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NODE_ENV=production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  web:
    container_name: saas-web
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    networks:
      saas-network:
        aliases:
          - web.saas.local
    ports:
      - '${WEB_PORT_EXTERNAL:-3001}:3001'
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://api.saas.local:3000
    depends_on:
      api:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  postgres:
    container_name: saas-postgres
    image: postgres:17
    networks:
      - saas-network
    ports:
      - '${DB_PORT_EXTERNAL:-5432}:5432'
    environment:
      - POSTGRES_USER=${DB_USER:-saas_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-saas_password}
      - POSTGRES_DB=${DB_NAME:-saas_db}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER:-saas_user} -d ${DB_NAME:-saas_db}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  redis:
    container_name: saas-redis
    image: redis:8-alpine
    networks:
      - saas-network
    ports:
      - '${REDIS_PORT_EXTERNAL:-6379}:6379'
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

networks:
  saas-network:
    driver: bridge
    name: saas-monorepo-network

volumes:
  postgres_data:
    name: saas_postgres_data
  redis_data:
    name: saas_redis_data